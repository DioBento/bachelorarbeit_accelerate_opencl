name: accelerate-examples
version: 1.3.0.0
cabal-version: >=1.10
tested-with: GHC >= 8.6
build-type: Simple

synopsis:      Examples using the Accelerate library
description:
    Example programs using the Accelerate library. The aim is for this package to
    evolve and be useful for both performance and regression testing.

-- Flags that control features of the benchmark programs
--
flag gui
  description:          Enable gloss-based GUIs, where applicable. If not
                        enabled, the application always runs in benchmark mode.
  default:              True

flag ekg
  description:          Enable EKG remote monitoring server at <http://localhost:8000>
  default:              False

flag codespeed
  description:          Enable upload of results to benchmark server
  default:              False

-- Flags that control which Accelerate backends that are linked against
--
flag llvm-cpu
  description:          Enable the LLVM backend for multicore CPUs
  default:              True

flag llvm-ptx
  description:          Enable the LLVM PTX backend for NVIDIA GPUs
  default:              True

-- Flags to specify which programs to build
--
flag gaussian
  description:          A Gauss-Jordan elimination benchmark
  default:              True

flag blur
  description:          A Gaussian blur benchmark
  default:              True

flag nn
  description:          Nearest Neighbour benchmark
  default:              True

-- Test harness
-- ------------

library
  default-language:     Haskell2010
  hs-source-dirs:       lib
  build-depends:
          base                            >= 4.7 && < 5
        , accelerate                      == 1.3.*
        , ansi-wl-pprint                  >= 0.6
        , containers                      >= 0.5
        , criterion                       >= 1.0
        , directory                       >= 1.1
        , fclabels                        >= 2.0
        , HUnit                           >= 1.2
        , QuickCheck                      >= 2.7
        , test-framework                  >= 0.5
        , test-framework-hunit            >= 0.3
        , test-framework-quickcheck2      >= 0.2

  exposed-modules:
        Data.Array.Accelerate.Examples.Internal

  Other-modules:
        Data.Array.Accelerate.Examples.Internal.Backend
        Data.Array.Accelerate.Examples.Internal.Criterion
        Data.Array.Accelerate.Examples.Internal.Criterion.Config
        Data.Array.Accelerate.Examples.Internal.Interactive
        Data.Array.Accelerate.Examples.Internal.Monitoring
        Data.Array.Accelerate.Examples.Internal.ParseArgs
        Data.Array.Accelerate.Examples.Internal.Report
        Data.Array.Accelerate.Examples.Internal.TestFramework
        Data.Array.Accelerate.Examples.Internal.TestFramework.Config
        Data.Array.Accelerate.Examples.Internal.Util

  ghc-options:          -O2 -Wall
  ghc-prof-options:     -caf-all -auto-all

  if flag(gui)
    CPP-options:        -DACCELERATE_ENABLE_GUI

  if flag(llvm-cpu)
    CPP-options:        -DACCELERATE_LLVM_NATIVE_BACKEND
    build-depends:
        accelerate-llvm-native            >= 1.3

  if flag(llvm-ptx)
    CPP-options:        -DACCELERATE_LLVM_PTX_BACKEND
    build-depends:
        accelerate-llvm-ptx               >= 1.3

  if flag(ekg)
    CPP-options:        -DACCELERATE_ENABLE_EKG

  if flag(codespeed)
    CPP-options:        -DACCELERATE_ENABLE_CODESPEED
    build-depends:
          aeson                           >= 0.8
        , bytestring                      >= 0.10
        , HTTP                            >= 4000.2
        , http-types                      >= 0.8
        , network                         >= 2.5
        , process                         >= 1.0
        , statistics                      >= 0.13
        , template-haskell                >= 2.2
        , text                            >= 0.11
        , time                            >= 1.4

    other-modules:
        Data.Array.Accelerate.Examples.Internal.Codespeed
        Data.Array.Accelerate.Examples.Internal.TH

-- Gauss-Jordan Elimination
-- ------------------------

executable accelerate-gaussian
  default-language:     Haskell2010
  hs-source-dirs:       gaussian
  main-is:              Main.hs
  other-modules:        Config Elimination

  ghc-options:
        -Wall
        -threaded
        -eventlog
        -rtsopts
        -with-rtsopts=-n2M
        -with-rtsopts=-A64M
        -with-rtsopts=-qg

  ghc-prof-options:
        -auto-all

  if flag(ekg)
    ghc-options:        -with-rtsopts=-T

  if !flag(gaussian)
    buildable:          False
  else
    build-depends:
          base                            >= 4.10 && < 5
        , accelerate                      == 1.3.*
        , accelerate-llvm                 == 1.3.*
        , accelerate-llvm-native          == 1.3.*
        , accelerate-llvm-ptx             == 1.3.*
        , accelerate-examples
        , fclabels                        == 2.0.5.1


-- Gaussian Blur
-- ------------------------

executable accelerate-blur
  default-language:     Haskell2010
  hs-source-dirs:       blur
  main-is:              Main.hs
  other-modules:        Config

  ghc-options:
        -Wall
        -threaded
        -eventlog
        -rtsopts
        -with-rtsopts=-n2M
        -with-rtsopts=-A64M
        -with-rtsopts=-qg

  ghc-prof-options:
        -auto-all

  if flag(ekg)
    ghc-options:        -with-rtsopts=-T

  if !flag(blur)
    buildable:          False
  else
    build-depends:
          base                            >= 4.10 && < 5
        , accelerate                      == 1.3.*
        , accelerate-llvm                 == 1.3.*
        , accelerate-llvm-native          == 1.3.*
        , accelerate-llvm-ptx             == 1.3.*
        , accelerate-examples
        , accelerate-io                   == 1.3.0.0
        , accelerate-io-bmp               == 0.1.0.0
        , colour-accelerate               == 0.4.0.0
        , filepath                        == 1.4.2.2
        , directory                       == 1.3.7.1
        , fclabels                        == 2.0.5.1


-- Nearest Neighbour
-- ------------------------

executable accelerate-nn
  default-language:     Haskell2010
  hs-source-dirs:       nn
  main-is:              Main.hs
  other-modules:        NearestNeighbour Config

  ghc-options:
        -Wall
        -threaded
        -eventlog
        -rtsopts
        -with-rtsopts=-n2M
        -with-rtsopts=-A64M
        -with-rtsopts=-qg

  ghc-prof-options:
        -auto-all

  if flag(ekg)
    ghc-options:        -with-rtsopts=-T

  if !flag(nn)
    buildable:          False
  else
    build-depends:
          base                            >= 4.10 && < 5
        , accelerate                      == 1.3.*
        , accelerate-llvm                 == 1.3.*
        , accelerate-llvm-native          == 1.3.*
        , accelerate-llvm-ptx             == 1.3.*
        , accelerate-examples
        , accelerate-io-bmp               == 0.1.0.0
        , fclabels                        == 2.0.5.1
